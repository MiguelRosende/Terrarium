//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace Terrarium.Services.Discovery
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PeerDiscoveryServiceSoap", Namespace="http://tempuri.org/")]
    public partial class PeerDiscoveryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumPeersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalNumPeersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePeerOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterMyPeerGetCountAndPeerListOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsVersionDisabledOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PeerDiscoveryService() {
            this.Url = "http://localhost:56385/Website/Discovery/DiscoveryDB.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterUserCompletedEventHandler RegisterUserCompleted;
        
        /// <remarks/>
        public event GetNumPeersCompletedEventHandler GetNumPeersCompleted;
        
        /// <remarks/>
        public event GetTotalNumPeersCompletedEventHandler GetTotalNumPeersCompleted;
        
        /// <remarks/>
        public event ValidatePeerCompletedEventHandler ValidatePeerCompleted;
        
        /// <remarks/>
        public event RegisterMyPeerGetCountAndPeerListCompletedEventHandler RegisterMyPeerGetCountAndPeerListCompleted;
        
        /// <remarks/>
        public event IsVersionDisabledCompletedEventHandler IsVersionDisabledCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterUser(string email) {
            object[] results = this.Invoke("RegisterUser", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterUser(string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterUser", new object[] {
                        email}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRegisterUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string email) {
            this.RegisterUserAsync(email, null);
        }
        
        /// <remarks/>
        public void RegisterUserAsync(string email, object userState) {
            if ((this.RegisterUserOperationCompleted == null)) {
                this.RegisterUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserOperationCompleted);
            }
            this.InvokeAsync("RegisterUser", new object[] {
                        email}, this.RegisterUserOperationCompleted, userState);
        }
        
        private void OnRegisterUserOperationCompleted(object arg) {
            if ((this.RegisterUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserCompleted(this, new RegisterUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNumPeers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNumPeers(string version, string channel) {
            object[] results = this.Invoke("GetNumPeers", new object[] {
                        version,
                        channel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNumPeers(string version, string channel, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNumPeers", new object[] {
                        version,
                        channel}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetNumPeers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumPeersAsync(string version, string channel) {
            this.GetNumPeersAsync(version, channel, null);
        }
        
        /// <remarks/>
        public void GetNumPeersAsync(string version, string channel, object userState) {
            if ((this.GetNumPeersOperationCompleted == null)) {
                this.GetNumPeersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumPeersOperationCompleted);
            }
            this.InvokeAsync("GetNumPeers", new object[] {
                        version,
                        channel}, this.GetNumPeersOperationCompleted, userState);
        }
        
        private void OnGetNumPeersOperationCompleted(object arg) {
            if ((this.GetNumPeersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumPeersCompleted(this, new GetNumPeersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalNumPeers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTotalNumPeers() {
            object[] results = this.Invoke("GetTotalNumPeers", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTotalNumPeers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTotalNumPeers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetTotalNumPeers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalNumPeersAsync() {
            this.GetTotalNumPeersAsync(null);
        }
        
        /// <remarks/>
        public void GetTotalNumPeersAsync(object userState) {
            if ((this.GetTotalNumPeersOperationCompleted == null)) {
                this.GetTotalNumPeersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalNumPeersOperationCompleted);
            }
            this.InvokeAsync("GetTotalNumPeers", new object[0], this.GetTotalNumPeersOperationCompleted, userState);
        }
        
        private void OnGetTotalNumPeersOperationCompleted(object arg) {
            if ((this.GetTotalNumPeersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalNumPeersCompleted(this, new GetTotalNumPeersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePeer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidatePeer() {
            object[] results = this.Invoke("ValidatePeer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginValidatePeer(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ValidatePeer", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndValidatePeer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePeerAsync() {
            this.ValidatePeerAsync(null);
        }
        
        /// <remarks/>
        public void ValidatePeerAsync(object userState) {
            if ((this.ValidatePeerOperationCompleted == null)) {
                this.ValidatePeerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePeerOperationCompleted);
            }
            this.InvokeAsync("ValidatePeer", new object[0], this.ValidatePeerOperationCompleted, userState);
        }
        
        private void OnValidatePeerOperationCompleted(object arg) {
            if ((this.ValidatePeerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePeerCompleted(this, new ValidatePeerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterMyPeerGetCountAndPeerList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegisterPeerResult RegisterMyPeerGetCountAndPeerList(string version, string channel, System.Guid guid, out System.Data.DataSet peers, out int count) {
            object[] results = this.Invoke("RegisterMyPeerGetCountAndPeerList", new object[] {
                        version,
                        channel,
                        guid});
            peers = ((System.Data.DataSet)(results[1]));
            count = ((int)(results[2]));
            return ((RegisterPeerResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegisterMyPeerGetCountAndPeerList(string version, string channel, System.Guid guid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RegisterMyPeerGetCountAndPeerList", new object[] {
                        version,
                        channel,
                        guid}, callback, asyncState);
        }
        
        /// <remarks/>
        public RegisterPeerResult EndRegisterMyPeerGetCountAndPeerList(System.IAsyncResult asyncResult, out System.Data.DataSet peers, out int count) {
            object[] results = this.EndInvoke(asyncResult);
            peers = ((System.Data.DataSet)(results[1]));
            count = ((int)(results[2]));
            return ((RegisterPeerResult)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterMyPeerGetCountAndPeerListAsync(string version, string channel, System.Guid guid) {
            this.RegisterMyPeerGetCountAndPeerListAsync(version, channel, guid, null);
        }
        
        /// <remarks/>
        public void RegisterMyPeerGetCountAndPeerListAsync(string version, string channel, System.Guid guid, object userState) {
            if ((this.RegisterMyPeerGetCountAndPeerListOperationCompleted == null)) {
                this.RegisterMyPeerGetCountAndPeerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterMyPeerGetCountAndPeerListOperationCompleted);
            }
            this.InvokeAsync("RegisterMyPeerGetCountAndPeerList", new object[] {
                        version,
                        channel,
                        guid}, this.RegisterMyPeerGetCountAndPeerListOperationCompleted, userState);
        }
        
        private void OnRegisterMyPeerGetCountAndPeerListOperationCompleted(object arg) {
            if ((this.RegisterMyPeerGetCountAndPeerListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterMyPeerGetCountAndPeerListCompleted(this, new RegisterMyPeerGetCountAndPeerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsVersionDisabled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsVersionDisabled(string version, out string errorMessage) {
            object[] results = this.Invoke("IsVersionDisabled", new object[] {
                        version});
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsVersionDisabled(string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsVersionDisabled", new object[] {
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsVersionDisabled(System.IAsyncResult asyncResult, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            errorMessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsVersionDisabledAsync(string version) {
            this.IsVersionDisabledAsync(version, null);
        }
        
        /// <remarks/>
        public void IsVersionDisabledAsync(string version, object userState) {
            if ((this.IsVersionDisabledOperationCompleted == null)) {
                this.IsVersionDisabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsVersionDisabledOperationCompleted);
            }
            this.InvokeAsync("IsVersionDisabled", new object[] {
                        version}, this.IsVersionDisabledOperationCompleted, userState);
        }
        
        private void OnIsVersionDisabledOperationCompleted(object arg) {
            if ((this.IsVersionDisabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsVersionDisabledCompleted(this, new IsVersionDisabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum RegisterPeerResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failure,
        
        /// <remarks/>
        GlobalFailure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterUserCompletedEventHandler(object sender, RegisterUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetNumPeersCompletedEventHandler(object sender, GetNumPeersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumPeersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumPeersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTotalNumPeersCompletedEventHandler(object sender, GetTotalNumPeersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalNumPeersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalNumPeersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidatePeerCompletedEventHandler(object sender, ValidatePeerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePeerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePeerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterMyPeerGetCountAndPeerListCompletedEventHandler(object sender, RegisterMyPeerGetCountAndPeerListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterMyPeerGetCountAndPeerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterMyPeerGetCountAndPeerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegisterPeerResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegisterPeerResult)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet peers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int count {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void IsVersionDisabledCompletedEventHandler(object sender, IsVersionDisabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsVersionDisabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsVersionDisabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591