//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18033.
// 
#pragma warning disable 1591

namespace Terrarium.Services.Species
{


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SpeciesServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SpeciesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExtinctSpeciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSpeciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpeciesAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReintroduceSpeciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlacklistedSpeciesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SpeciesService() {
            this.Url = "http://localhost:56385/Website/Species/AddSpecies.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCompletedEventHandler AddCompleted;
        
        /// <remarks/>
        public event GetExtinctSpeciesCompletedEventHandler GetExtinctSpeciesCompleted;
        
        /// <remarks/>
        public event GetAllSpeciesCompletedEventHandler GetAllSpeciesCompleted;
        
        /// <remarks/>
        public event GetSpeciesAssemblyCompletedEventHandler GetSpeciesAssemblyCompleted;
        
        /// <remarks/>
        public event ReintroduceSpeciesCompletedEventHandler ReintroduceSpeciesCompleted;
        
        /// <remarks/>
        public event GetBlacklistedSpeciesCompletedEventHandler GetBlacklistedSpeciesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Add", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SpeciesServiceStatus Add(string name, string version, string type, string author, string email, string assemblyFullName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] assemblyCode) {
            object[] results = this.Invoke("Add", new object[] {
                        name,
                        version,
                        type,
                        author,
                        email,
                        assemblyFullName,
                        assemblyCode});
            return ((SpeciesServiceStatus)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAdd(string name, string version, string type, string author, string email, string assemblyFullName, byte[] assemblyCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Add", new object[] {
                        name,
                        version,
                        type,
                        author,
                        email,
                        assemblyFullName,
                        assemblyCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public SpeciesServiceStatus EndAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SpeciesServiceStatus)(results[0]));
        }
        
        /// <remarks/>
        public void AddAsync(string name, string version, string type, string author, string email, string assemblyFullName, byte[] assemblyCode) {
            this.AddAsync(name, version, type, author, email, assemblyFullName, assemblyCode, null);
        }
        
        /// <remarks/>
        public void AddAsync(string name, string version, string type, string author, string email, string assemblyFullName, byte[] assemblyCode, object userState) {
            if ((this.AddOperationCompleted == null)) {
                this.AddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOperationCompleted);
            }
            this.InvokeAsync("Add", new object[] {
                        name,
                        version,
                        type,
                        author,
                        email,
                        assemblyFullName,
                        assemblyCode}, this.AddOperationCompleted, userState);
        }
        
        private void OnAddOperationCompleted(object arg) {
            if ((this.AddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCompleted(this, new AddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExtinctSpecies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetExtinctSpecies(string version, string filter) {
            object[] results = this.Invoke("GetExtinctSpecies", new object[] {
                        version,
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExtinctSpecies(string version, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExtinctSpecies", new object[] {
                        version,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetExtinctSpecies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetExtinctSpeciesAsync(string version, string filter) {
            this.GetExtinctSpeciesAsync(version, filter, null);
        }
        
        /// <remarks/>
        public void GetExtinctSpeciesAsync(string version, string filter, object userState) {
            if ((this.GetExtinctSpeciesOperationCompleted == null)) {
                this.GetExtinctSpeciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExtinctSpeciesOperationCompleted);
            }
            this.InvokeAsync("GetExtinctSpecies", new object[] {
                        version,
                        filter}, this.GetExtinctSpeciesOperationCompleted, userState);
        }
        
        private void OnGetExtinctSpeciesOperationCompleted(object arg) {
            if ((this.GetExtinctSpeciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExtinctSpeciesCompleted(this, new GetExtinctSpeciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSpecies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllSpecies(string version, string filter) {
            object[] results = this.Invoke("GetAllSpecies", new object[] {
                        version,
                        filter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllSpecies(string version, string filter, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllSpecies", new object[] {
                        version,
                        filter}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetAllSpecies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSpeciesAsync(string version, string filter) {
            this.GetAllSpeciesAsync(version, filter, null);
        }
        
        /// <remarks/>
        public void GetAllSpeciesAsync(string version, string filter, object userState) {
            if ((this.GetAllSpeciesOperationCompleted == null)) {
                this.GetAllSpeciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSpeciesOperationCompleted);
            }
            this.InvokeAsync("GetAllSpecies", new object[] {
                        version,
                        filter}, this.GetAllSpeciesOperationCompleted, userState);
        }
        
        private void OnGetAllSpeciesOperationCompleted(object arg) {
            if ((this.GetAllSpeciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSpeciesCompleted(this, new GetAllSpeciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpeciesAssembly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSpeciesAssembly(string name, string version) {
            object[] results = this.Invoke("GetSpeciesAssembly", new object[] {
                        name,
                        version});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSpeciesAssembly(string name, string version, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSpeciesAssembly", new object[] {
                        name,
                        version}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetSpeciesAssembly(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpeciesAssemblyAsync(string name, string version) {
            this.GetSpeciesAssemblyAsync(name, version, null);
        }
        
        /// <remarks/>
        public void GetSpeciesAssemblyAsync(string name, string version, object userState) {
            if ((this.GetSpeciesAssemblyOperationCompleted == null)) {
                this.GetSpeciesAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpeciesAssemblyOperationCompleted);
            }
            this.InvokeAsync("GetSpeciesAssembly", new object[] {
                        name,
                        version}, this.GetSpeciesAssemblyOperationCompleted, userState);
        }
        
        private void OnGetSpeciesAssemblyOperationCompleted(object arg) {
            if ((this.GetSpeciesAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpeciesAssemblyCompleted(this, new GetSpeciesAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReintroduceSpecies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReintroduceSpecies(string name, string version, System.Guid peerGuid) {
            object[] results = this.Invoke("ReintroduceSpecies", new object[] {
                        name,
                        version,
                        peerGuid});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReintroduceSpecies(string name, string version, System.Guid peerGuid, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReintroduceSpecies", new object[] {
                        name,
                        version,
                        peerGuid}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndReintroduceSpecies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReintroduceSpeciesAsync(string name, string version, System.Guid peerGuid) {
            this.ReintroduceSpeciesAsync(name, version, peerGuid, null);
        }
        
        /// <remarks/>
        public void ReintroduceSpeciesAsync(string name, string version, System.Guid peerGuid, object userState) {
            if ((this.ReintroduceSpeciesOperationCompleted == null)) {
                this.ReintroduceSpeciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReintroduceSpeciesOperationCompleted);
            }
            this.InvokeAsync("ReintroduceSpecies", new object[] {
                        name,
                        version,
                        peerGuid}, this.ReintroduceSpeciesOperationCompleted, userState);
        }
        
        private void OnReintroduceSpeciesOperationCompleted(object arg) {
            if ((this.ReintroduceSpeciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReintroduceSpeciesCompleted(this, new ReintroduceSpeciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBlacklistedSpecies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetBlacklistedSpecies() {
            object[] results = this.Invoke("GetBlacklistedSpecies", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBlacklistedSpecies(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBlacklistedSpecies", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetBlacklistedSpecies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBlacklistedSpeciesAsync() {
            this.GetBlacklistedSpeciesAsync(null);
        }
        
        /// <remarks/>
        public void GetBlacklistedSpeciesAsync(object userState) {
            if ((this.GetBlacklistedSpeciesOperationCompleted == null)) {
                this.GetBlacklistedSpeciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlacklistedSpeciesOperationCompleted);
            }
            this.InvokeAsync("GetBlacklistedSpecies", new object[0], this.GetBlacklistedSpeciesOperationCompleted, userState);
        }
        
        private void OnGetBlacklistedSpeciesOperationCompleted(object arg) {
            if ((this.GetBlacklistedSpeciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlacklistedSpeciesCompleted(this, new GetBlacklistedSpeciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18033")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SpeciesServiceStatus {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        AlreadyExists,
        
        /// <remarks/>
        ServerDown,
        
        /// <remarks/>
        VersionIncompatible,
        
        /// <remarks/>
        FiveMinuteThrottle,
        
        /// <remarks/>
        TwentyFourHourThrottle,
        
        /// <remarks/>
        PoliCheckSpeciesNameFailure,
        
        /// <remarks/>
        PoliCheckAuthorNameFailure,
        
        /// <remarks/>
        PoliCheckEmailFailure,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCompletedEventHandler(object sender, AddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SpeciesServiceStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SpeciesServiceStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExtinctSpeciesCompletedEventHandler(object sender, GetExtinctSpeciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExtinctSpeciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExtinctSpeciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllSpeciesCompletedEventHandler(object sender, GetAllSpeciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSpeciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSpeciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSpeciesAssemblyCompletedEventHandler(object sender, GetSpeciesAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpeciesAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpeciesAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ReintroduceSpeciesCompletedEventHandler(object sender, ReintroduceSpeciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReintroduceSpeciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReintroduceSpeciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetBlacklistedSpeciesCompletedEventHandler(object sender, GetBlacklistedSpeciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlacklistedSpeciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlacklistedSpeciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591